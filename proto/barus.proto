syntax = "proto3";

package barus;

// Barus Key-Value Store Service
service BarusService {
  // List all tables
  rpc ListTables(ListTablesRequest) returns (ListTablesResponse);

  // Create a new table
  rpc CreateTable(CreateTableRequest) returns (CreateTableResponse);

  // Get table information
  rpc GetTable(GetTableRequest) returns (GetTableResponse);

  // Drop a table
  rpc DropTable(DropTableRequest) returns (DropTableResponse);

  // Get a value by key
  rpc Get(GetRequest) returns (GetResponse);

  // Put a key-value pair
  rpc Put(PutRequest) returns (PutResponse);

  // Delete a key
  rpc Delete(DeleteRequest) returns (DeleteResponse);

  // Health check
  rpc Health(HealthRequest) returns (HealthResponse);

  // Flush WAL to disk
  rpc FlushWAL(FlushWALRequest) returns (FlushWALResponse);

  // Get database status
  rpc GetDBStatus(GetDBStatusRequest) returns (GetDBStatusResponse);
}

message GetRequest {
  string table = 1;
  string key = 2;
}

message GetResponse {
  string key = 1;
  string value = 2;
}

message PutRequest {
  string table = 1;
  string key = 2;
  string value = 3;
}

message PutResponse {
  string message = 1;
}

message DeleteRequest {
  string table = 1;
  string key = 2;
}

message DeleteResponse {
  string message = 1;
}

message HealthRequest {}

message HealthResponse {
  string status = 1;
}

message FlushWALRequest {}

message FlushWALResponse {
  string message = 1;
}

message CreateTableRequest {
  string table = 1;
}

message CreateTableResponse {
  string message = 1;
}

message ListTablesRequest {}

message ListTablesResponse {
  repeated TableInfo tables = 1;
}

message TableInfo {
  string table_name = 1;
}

message DropTableRequest {
  string table = 1;
}

message DropTableResponse {
  string message = 1;
}

message GetTableRequest {
  string table = 1;
}

message GetTableResponse {
  string table_name = 1;
}

message GetDBStatusRequest {}

message GetDBStatusResponse {
  uint64 memtable_size = 1;
  uint64 table_count = 2;
}
